name: Build Nuget Packages

on:
  push:
    tags:
      - 'release-*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Extract version from tag
      id: version
      run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/tags/release-})"

    - name: Update Assembly Version
      run: |
        version=${{ steps.version.outputs.version }}
        echo "Updating .csproj files to version $version"

        for file in $(find . -name '*.csproj'); do
          sed -i "s|<AssemblyVersion>.*</AssemblyVersion>|<AssemblyVersion>$version</AssemblyVersion>|g" "$file"
          sed -i "s|<FileVersion>.*</FileVersion>|<FileVersion>$version</FileVersion>|g" "$file"
          sed -i "s|<Version>.*</Version>|<Version>$version</Version>|g" "$file"
        done

        echo "Version update complete"

    - name: Build and publish NuGet package
      run: |
        dotnet restore
        dotnet build --configuration Release --no-restore
        dotnet pack --configuration Release --no-restore --output nupkgs
    # ... previous steps ...

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload NuGet Package 1 to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nupkgs/Vizgql.Console.${{ steps.version.outputs.version }}.nupkg
        asset_name: Vizgql.Console.${{ steps.version.outputs.version }}.nupkg
        asset_content_type: application/octet-stream

    - name: Upload NuGet Package 2 to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nupkgs/Vizgql.Core.${{ steps.version.outputs.version }}.nupkg
        asset_name: Vizgql.Core.${{ steps.version.outputs.version }}.nupkg
        asset_content_type: application/octet-stream

    - name: Upload NuGet Package 3 to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nupkgs/Vizgql.ReportBuilder.${{ steps.version.outputs.version }}.nupkg
        asset_name: Vizgql.ReportBuilder.${{ steps.version.outputs.version }}.nupkg
        asset_content_type: application/octet-stream

    - name: Upload NuGet Package 1 to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nupkgs/Vizgql.ReportBuilder.Html.${{ steps.version.outputs.version }}.nupkg
        asset_name: Vizgql.ReportBuilder.Html.${{ steps.version.outputs.version }}.nupkg
        asset_content_type: application/octet-stream

